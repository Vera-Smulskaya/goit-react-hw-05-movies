{"version":3,"file":"static/js/861.6ecf0ffa.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://goit-react-hw-05-movies/./src/components/MovieCast/MovieCast.module.css?c01c","components/MovieCast/MovieCast.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieReviews/MovieReviews.module.css?a938","components/MovieReviews/MovieReviews.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerPageMovieDetails\":\"MovieDetails_containerPageMovieDetails__EA-Fv\",\"linkGoBack\":\"MovieDetails_linkGoBack__wojGA\",\"containerMovieDetails\":\"MovieDetails_containerMovieDetails__7Q5RO\",\"containerInfoMovieDetails\":\"MovieDetails_containerInfoMovieDetails__OfNJe\",\"titleMovieDetails\":\"MovieDetails_titleMovieDetails__oHpet\",\"textMovieDetails\":\"MovieDetails_textMovieDetails__+t6Kj\",\"listMovieDetailsGenres\":\"MovieDetails_listMovieDetailsGenres__Gt7E4\",\"subtitleMovieDetails\":\"MovieDetails_subtitleMovieDetails__zV9g0\",\"blockCastReviews\":\"MovieDetails_blockCastReviews__XAhxD\",\"linkCastReviews\":\"MovieDetails_linkCastReviews__7wNta\"};","// extracted by mini-css-extract-plugin\nexport default {\"listCast\":\"MovieCast_listCast__1fR4A\",\"textCast\":\"MovieCast_textCast__xLLgr\",\"blockTextCast\":\"MovieCast_blockTextCast__QbYlc\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport css from './MovieCast.module.css';\nimport NoPhoto from '../../images/noPhoto.png';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const movieCast = await fetchMovieCast(movieId);\n        setMovieCast(movieCast);\n      } catch (e) {}\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <ul className={css.listCast}>\n      {movieCast.map(({ id, profile_path, original_name, character }) => (\n        <li key={id}>\n          <img\n            width={200}\n            height={280}\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                : NoPhoto\n            }\n            alt={original_name}\n          />\n          <div className={css.blockTextCast}>\n            <p className={css.textCast}>{original_name}</p>\n            <p className={css.characterCast}>{character}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"textReviews\":\"MovieReviews_textReviews__QLA3Y\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\nimport css from './MovieReviews.module.css';\n\nexport default function MovieReviews() {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId)\n      .then(results => setMovieReviews(results))\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {movieReviews\n        ? movieReviews.map(review => (\n            <li key={review.id}>\n              <h2>{review.author}</h2>\n              <p className={css.textReviews}>{review.content}</p>\n            </li>\n          ))\n        : 'there are no reviews'}\n    </ul>\n  );\n}\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovieDetails } from 'services/api';\nimport css from './MovieDetails.module.css';\nimport MovieCast from 'components/MovieCast/MovieCast';\nimport MovieReviews from 'components/MovieReviews/MovieReviews';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState('');\n  const [isLoading, setIsLoading] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backHomePage = useRef(location.state?.from ?? '/');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoading(true);\n    fetchMovieDetails(movieId)\n      .then(data => {\n        setMovieDetails(data);\n      })\n      .catch(error => {\n        navigate('/404');\n        setError(error);\n      })\n      .finally(setIsLoading(false));\n  }, [movieId, navigate]);\n\n  return (\n    <div className={css.containerPageMovieDetails}>\n      <Link className={css.linkGoBack} to={backHomePage.current}>\n        Go back\n      </Link>\n      {isLoading && <Loader />}\n      {!error && (\n        <div>\n          <div className={css.containerMovieDetails}>\n            <img\n              width={300}\n              height={450}\n              alt={movieDetails.title ? movieDetails.title : movieDetails.name}\n              title={\n                movieDetails.title ? movieDetails.title : movieDetails.name\n              }\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`\n                  : 'No poster found'\n              }\n            />\n            <div className={css.containerInfoMovieDetails}>\n              <h1 className={css.titleMovieDetails}>\n                {movieDetails.title ? movieDetails.title : movieDetails.name}\n              </h1>\n              <p className={css.textMovieDetails}>\n                User Score: {Math.round(movieDetails.vote_average * 10)}%\n              </p>\n              <h2 className={css.subtitleMovieDetails}>Overview:</h2>\n              <p className={css.textMovieDetails}>{movieDetails.overview}</p>\n              <h2 className={css.subtitleMovieDetails}>Genres:</h2>\n              <ul className={css.listMovieDetailsGenres}>\n                {movieDetails &&\n                  movieDetails.genres.map(genre => (\n                    <li className={css.textMovieDetails} key={genre.id}>\n                      {genre.name}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <div className={css.blockCastReviews}>\n              <NavLink className={css.linkCastReviews} to=\"cast\">\n                Cast\n              </NavLink>\n              <NavLink className={css.linkCastReviews} to=\"reviews\">\n                Reviews\n              </NavLink>\n            </div>\n          </div>\n          <div>\n            <Suspense fallback={<Loader />}>\n              <Routes>\n                <Route path=\"cast\" element={<MovieCast />} />\n                <Route path=\"reviews\" element={<MovieReviews />} />\n              </Routes>\n            </Suspense>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '7e63573e5f6a11223e01d9dfd6333e93';\nconst baseUrl = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n  },\n};\n\nexport const fetchMoviesTrending = async () => {\n  const { data } = await axios.get(\n    `${baseUrl}trending/all/day?api_key=${KEY}`,\n    options\n  );\n\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const query = await axios.get(\n    `${baseUrl}movie/${movieId}?api_key=${KEY}&language=en-US`,\n    options\n  );\n  const { data } = query;\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseUrl}movie/${movieId}/credits?api_key=${KEY}&include_adult=false&language=en-US`,\n    options\n  );\n\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseUrl}movie/${movieId}/reviews?api_key=${KEY}&include_adult=false&language=en-US`,\n    options\n  );\n\n  return data.results;\n};\n\nexport const fetchSearchedMovie = async queryValue => {\n  const { data } = await axios.get(\n    `${baseUrl}search/movie?api_key=${KEY}&query=${queryValue}&include_adult=false&language=en-US`,\n    options\n  );\n  return data;\n};\n"],"names":["Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_movieCast","_context","prev","next","fetchMovieCast","sent","t0","stop","apply","arguments","_jsx","className","css","children","map","_ref2","id","profile_path","original_name","character","_jsxs","width","height","src","concat","NoPhoto","alt","MovieReviews","movieReviews","setMovieReviews","fetchMovieReviews","then","results","catch","err","console","error","review","author","content","MovieDetails","_location$state$from","_location$state","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","location","useLocation","backHomePage","useRef","state","from","navigate","useNavigate","fetchMovieDetails","data","finally","Link","to","current","Loader","title","name","poster_path","Math","round","vote_average","overview","genres","genre","NavLink","Suspense","fallback","Routes","Route","path","element","MovieCast","KEY","baseUrl","options","method","headers","accept","fetchMoviesTrending","_yield$axios$get","axios","abrupt","_callee2","query","_context2","_x","_ref3","_callee3","_yield$axios$get2","_context3","cast","_x2","_ref4","_callee4","_yield$axios$get3","_context4","_x3","fetchSearchedMovie","_ref5","_callee5","queryValue","_yield$axios$get4","_context5","_x4"],"sourceRoot":""}