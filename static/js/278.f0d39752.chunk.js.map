{"version":3,"file":"static/js/278.f0d39752.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"movieItem\":\"MoviesList_movieItem__p4FQU\"};","import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nimport css from './MoviesList.module.css';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <div>\n      <ul className={css.movieList}>\n        {movies\n          ? movies.map(movie => (\n              <NavLink\n                state={{ from: location }}\n                className={css.movieItem}\n                to={`/movies/${movie.id}`}\n                key={movie.id}\n              >\n                <li key={movie.id}>\n                  <img\n                    className={css.movieImage}\n                    alt={movie.title}\n                    title={movie.title}\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w400${movie.poster_path}`\n                        : 'no-image'\n                    }\n                  />\n                </li>\n              </NavLink>\n            ))\n          : null}\n      </ul>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Notiflix from 'notiflix';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MoviesList/MoviesList';\n\nconst KEY = '7e63573e5f6a11223e01d9dfd6333e93';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedMovie, setSearchedMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const queryValue = searchParams.get('query');\n  console.log('queryValue', queryValue);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const valueSearch = event.currentTarget.elements.searchKey.value;\n    setSearchParams({ query: valueSearch });\n  };\n\n  useEffect(() => {\n    if (!queryValue) return;\n    const fetchSearchedMovie = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${queryValue}&include_adult=false&language=en-US`\n        );\n        setSearchedMovie(data.results);\n        if (data.results.length === 0) {\n          setSearchParams();\n          setSearchedMovie('');\n\n          Notiflix.Notify.failure('There are no films. Please try again.');\n          return;\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchedMovie();\n  }, [queryValue, setSearchParams]);\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"searchKey\"\n            required\n            placeholder=\"what movie are you looking for?\"\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {isLoading && <Loader />}\n      {!error && <MovieList movies={searchedMovie} />}\n    </div>\n  );\n}\n"],"names":["MovieList","_ref","movies","location","useLocation","_jsx","children","className","css","map","movie","NavLink","state","from","to","concat","id","alt","title","src","poster_path","Movies","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchedMovie","setSearchedMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","queryValue","get","console","log","useEffect","fetchSearchedMovie","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","sent","results","length","Notiflix","abrupt","t0","message","finish","stop","apply","arguments","_jsxs","onSubmit","event","preventDefault","valueSearch","currentTarget","elements","searchKey","value","query","type","name","required","placeholder","Loader"],"sourceRoot":""}